name: BackEnd - CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'ua-hannam/config-service'

env:
  DOCKER_REGISTRY: http://211.205.161.133:5000
  IMAGE_REPO: config-service

jobs:
  build_and_push:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.cloud.config.server.git.host-key: ${{ secrets.SSH_HOST_KEY }}
          spring.cloud.config.server.git.private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          spring.cloud.config.server.git.passphrase: ${{ secrets.SSH_PASSPHRASE }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
            java-version: 17
            distribution: 'temurin'

      - name: Gradle caching
        uses: actions/cache@v3
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Gradlew grant
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Get current time
        run: echo "::set-output name=time::$(date +%Y-%m-%d-%H-%M-%S)"

      - name: Build and Push client to Harbor
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/config-service:${{ steps.time.outputs.time }} .
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/config-service:${{ steps.time.outputs.time }}