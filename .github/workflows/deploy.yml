name: BackEnd - CI/CD

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: 211.205.161.133:5443
  IMAGE_REPO: uahannam
  SERVICE_NAME: config-service

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.cloud.config.server.git.host-key: ${{ secrets.SSH_HOST_KEY }}
          spring.cloud.config.server.git.private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          spring.cloud.config.server.git.passphrase: ${{ secrets.SSH_PASSPHRASE }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
            java-version: 17

      - name: Gradle caching
        uses: MasterworksIO/action-local-cache@2
        with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Gradlew grant
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

#      - name: Login to Docker Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ${{ env.DOCKER_REGISTRY }}
#          username: ${{ secrets.HARBOR_USERNAME }}
#          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and Push to Harbor
        run: |
          docker login {{ env.DOCKER_REGISTRY }} -u ${{ secrets.HARBOR_USERNAME }} -p ${{ secrets.HARBOR_PASSWORD }}  
          docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}:latest .
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}:latest

  run_docker_image:
    needs: build_and_push
    runs-on: self-hosted

    steps:
      - name: Docker Stop Container
        run: |
          docker stop $(docker ps --format '{{.ID}} {{.Names}}' | awk '/${{ env.SERVICE_NAME }}/{print $1}') 2>/dev/null || true

      - name: Docker Pull Image and Run New Container
        run: | 
          docker run --name ${{ env.SERVICE_NAME }} --rm -d -p 9999:8888 ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}:latest

      - name: Delete Old Docker Image
        run: |
          docker images | grep '${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}' | grep '<none>' |awk '{print $3}' | xargs -r docker rmi